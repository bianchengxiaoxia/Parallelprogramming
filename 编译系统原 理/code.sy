// integer_max.sy
int max(int a, int b) {
    return a > b ? a : b;
}

int main() {
    int x, y;
    scanf("%d %d", &x, &y);
    printf("Max value: %d\n", max(x, y));
    return 0;
}

// float_sum.sy
float sum(float a, float b) {
    return a + b;
}

int main() {
    float x, y;
    scanf("%f %f", &x, &y);
    printf("Sum: %.2f\n", sum(x, y));
    return 0;
}

/*// array_sum.sy
int main() {
int n, m;  // n和m现在将从输入中获取
scanf("%d %d", &n, &m);
int arr[100][100]; // 假设最大大小为100x100，实际应用中应适当调整

// 输入数组元素
@for (int i = 0; i < n; i++) {
    @for (int j = 0; j < m; j++) {
        scanf("%d", &arr[i][j]);
    }
}

int sum = 0;
@for (int i = 0; i < n; i++) {
    @for (int j = 0; j < m; j++) {
        sum += arr[i][j];
    }
}

printf("Total sum of array elements: %d\n", sum);
return 0;
}
*/
int main() {
    int n = 2, m = 3; // 定义 2x3 的数组大小

    // 定义并初始化一个 2x3 的数组
    int arr[2][3] = {
        {1, 2, 4},
        {4, 5, 6}
    };

    int sum = 0;

    // 计算数组元素的总和
    @for (int i = 0; i < n; i++) {
        @for (int j = 0; j < m; j++) {
            sum += arr[i][j];
        }
    }

    // 输出总和
    printf("Total sum of array elements: %d\n", sum);

    return 0;
}
